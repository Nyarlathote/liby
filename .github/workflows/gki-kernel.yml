name: GKI Kernel Build

on:
  workflow_call:
    inputs:
      version:
        required: true
        type: string
        description: >
          Output directory of gki,
          for example: android12-5.10
      version_name:
        required: true
        type: string
        description: >
          With SUBLEVEL of kernel,
          for example: android12-5.10.66
      tag:
        required: true
        type: string
        description: >
          Part of branch name of common kernel manifest,
          for example: android12-5.10-2021-11
      os_patch_level:
        required: false
        type: string
        description: >
          Patch level of common kernel manifest,
          for example: 2021-11
        default: 2024-05
      patch_path:
        required: false
        type: string
        description: >
          Directory name of .github/patches/<patch_path>
          for example: 5.10
      use_cache:
        required: false
        type: boolean
        default: true
      embed_ksud:
        required: false
        type: string
        default: ksud-aarch64-linux-android
        description: >
          Artifact name of prebuilt ksud to be embedded
          for example: ksud-aarch64-linux-android
      debug:
        required: false
        type: boolean
        default: false
      build_lkm:
        required: false
        type: boolean
        default: false
    secrets:
      BOOT_SIGN_KEY:
        required: false
      CHAT_ID:
        required: false
      BOT_TOKEN:
        required: false
      MESSAGE_THREAD_ID:
        required: false  
jobs:
  build:
    name: Build ${{ inputs.version_name }}
    runs-on: ubuntu-latest
    env:
      CCACHE_COMPILERCHECK: "%compiler% -dumpmachine; %compiler% -dumpversion"
      CCACHE_NOHASHDIR: "true"
      CCACHE_HARDLINK: "true"
    steps:
      - name: Maximize build space
        uses: easimon/maximize-build-space@master
        with:
          root-reserve-mb: 8192
          temp-reserve-mb: 2048
          remove-dotnet: 'true'
          remove-android: 'true'
          remove-haskell: 'true'
          remove-codeql: 'true'
      - name: Setup kernel source
        run: |
          echo "Free space:"
          df -h
          cd $GITHUB_WORKSPACE
          sudo apt-get install repo -y
          mkdir android-kernel && cd android-kernel
          repo init --depth=1 --u https://android.googlesource.com/kernel/manifest -b common-${{ inputs.tag }} --repo-rev=v2.16
          REMOTE_BRANCH=$(git ls-remote https://android.googlesource.com/kernel/common ${{ inputs.tag }})
          DEFAULT_MANIFEST_PATH=.repo/manifests/default.xml
          if grep -q deprecated <<< $REMOTE_BRANCH; then
            echo "Found deprecated branch: ${{ inputs.tag }}"
            sed -i 's/"${{ inputs.tag }}"/"deprecated\/${{ inputs.tag }}"/g' $DEFAULT_MANIFEST_PATH
            cat $DEFAULT_MANIFEST_PATH
          fi
          repo --version
          repo --trace sync -c -j$(nproc --all) --no-tags
          df -h
      - name: Setup Configuration for Kernel
        run: |
          cd $GITHUB_WORKSPACE/android-kernel
          wget https://github.com/Nyarlathote/liby/raw/master/build.config.gki
          wget https://github.com/Nyarlathote/liby/raw/master/build.sh
          cp $GITHUB_WORKSPACE/android-kernel/build.config.gki $GITHUB_WORKSPACE/android-kernel/common/build.config.gki
          cp $GITHUB_WORKSPACE/android-kernel/build.sh $GITHUB_WORKSPACE/android-kernel/build/build.sh     
            echo "CONFIG_MODULES=y" >> common/arch/arm64/configs/gki_defconfig
            echo "CONFIG_KPROBES=y" >> common/arch/arm64/configs/gki_defconfig
            echo "CONFIG_HAVE_KPROBES=y" >> common/arch/arm64/configs/gki_defconfig
            echo "CONFIG_KPROBE_EVENTS=y" >> common/arch/arm64/configs/gki_defconfig
            echo "CONFIG_OVERLAY_FS=y" >> common/arch/arm64/configs/gki_defconfig
            sed -i 's/CONFIG_LTO=y/CONFIG_LTO=n/' common/arch/arm64/configs/gki_defconfig
            sed -i 's/CONFIG_LTO_CLANG=y/CONFIG_LTO_CLANG=n/' common/arch/arm64/configs/gki_defconfig
            sed -i 's/CONFIG_THINLTO=y/CONFIG_THINLTO=n/' common/arch/arm64/configs/gki_defconfig
            echo "CONFIG_LTO_NONE=y" >> common/arch/arm64/configs/gki_defconfig
            echo "CONFIG_CC_WERROR=n" >> common/arch/arm64/configs/gki_defconfig

                  
      - name: Setup LXC
        run: |
         cd $GITHUB_WORKSPACE/android-kernel
          rm -rf utils
          wget https://github.com/Nyarlathote/liby/raw/master/_setup_env.sh
          git clone https://github.com/tomxi1997/lxc-docker-support-for-android.git utils
          echo 'source "utils/Kconfig"' >> "Kconfig"

          echo "CONFIG_DOCKER=y" >> echo "# CONFIG_ANDROID_PARANOID_NETWORK is not set" >> common/arch/arm64/configs/gki_defconfig

          sed -i '/CONFIG_ANDROID_PARANOID_NETWORK/d' common/arch/arm64/configs/gki_defconfig
          echo "# CONFIG_ANDROID_PARANOID_NETWORK is not set" >> common/arch/arm64/configs/gki_defconfig
          
          #sed -i '/CONFIG_LOCALVERSION/d' common/arch/arm64/configs/gki_defconfig
          #echo 'CONFIG_LOCALVERSION="-LXC-KernelSU-support_Pdx"' >> common/arch/arm64/configs/gki_defconfig
          
          chmod +x $GITHUB_WORKSPACE/android-kernel/utils/runcpatch.sh
          if [ -f $GITHUB_WORKSPACE/android-kernel/kernel/cgroup/cgroup.c ]; then
             sh $GITHUB_WORKSPACE/android-kernel/utils/runcpatch.sh $GITHUB_WORKSPACE/android-kernel/kernel/cgroup/cgroup.c
          fi
      
          if [ -f $GITHUB_WORKSPACE/android-kernel/kernel/cgroup.c ]; then
             sh $GITHUB_WORKSPACE/android-kernel/utils/runcpatch.sh $GITHUB_WORKSPACE/android-kernel/kernel/cgroup.c
          fi
          
          if [ -f $GITHUB_WORKSPACE/android-kernel/net/netfilter/xt_qtaguid.c ]; then
             patch -p0 < $GITHUB_WORKSPACE/android-kernel/utils/xt_qtaguid.patch
          fi

#          if [ -f common/arch/arm64/configs/gki_defconfig ]; then
#             cp $GITHUB_WORKSPACE/android-kernel/_setup_env.sh $GITHUB_WORKSPACE/android-kernel/build/_setup_env.sh
#          fi
          
      - name: Setup ccache
        if: inputs.use_cache == true
        uses: hendrikmuhs/ccache-action@v1
        with:
          key: gki-kernel-aarch64-${{ inputs.version_name }}
          max-size: 2G
          save: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}     
          
      - name: Build Kernel/LKM
        working-directory: android-kernel
        run: |
          SKIP_ABI_CHECKS=1 LTO=thin BUILD_CONFIG=common/build.config.gki.aarch64 build/build.sh CC="/usr/bin/ccache clang"
          

      - name: Prepare artifacts
        id: prepareArtifacts
        run: |
          OUTDIR=android-kernel/out/${{ inputs.version }}/dist
          if [ ! -e $OUTDIR ]; then
            OUTDIR=android-kernel/dist
          fi
          mkdir output
          if [ "${{ inputs.build_lkm}}" = "true" ]; then 
            llvm-strip-15 -d $OUTDIR/kernelsu.ko
            mv $OUTDIR/kernelsu.ko ./output/${{ inputs.version }}_kernelsu.ko
          else
            cp $OUTDIR/Image ./output/
            cp $OUTDIR/Image.lz4 ./output/
            git clone https://github.com/Kernel-SU/AnyKernel3
            rm -rf ./AnyKernel3/.git
            cp $OUTDIR/Image ./AnyKernel3/
          fi

      - name: Upload Image and Image.gz
        uses: actions/upload-artifact@v4
        if: ${{ inputs.build_lkm == false }}
        with:
          name: Image-${{ inputs.version_name }}_${{ inputs.os_patch_level }}
          path: ./output/*
          
      - name: Upload images artifact
        uses: actions/upload-artifact@v4
        with:
          name: boot-images-android13
          path: Image-android13*/*.img.gz


      - name: Upload AnyKernel3
        if: ${{ inputs.build_lkm == false }}
        uses: actions/upload-artifact@v4
        with:
          name: AnyKernel3-${{ inputs.version_name }}_${{ inputs.os_patch_level }}
          path: ./AnyKernel3/*

      - name: Upload LKM
        uses: actions/upload-artifact@v4
        if: ${{ inputs.build_lkm == true }}
        with:
          name: ${{ inputs.version }}-lkm
          path: ./output/*_kernelsu.ko          
